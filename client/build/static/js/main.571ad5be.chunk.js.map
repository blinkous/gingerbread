{"version":3,"sources":["images/gingerbread-cookies-0.jpg","images/gingerbread-cookies-1.jpg","images/gingerbread-cookies-2.jpg","images/gingerbread-cookies-3.jpg","images/gingerbread-cookies-4.jpg","images/gingerbread-cookies-5.jpg","redux/actions.js","redux/actionTypes.js","components/SearchBox.js","helpers/index.js","fetchers/index.js","components/RecipeCard.js","components/SearchResults.js","components/RecipeDetails.js","components/Home.js","redux/reducers/search.js","redux/reducers/recipes.js","redux/reducers/activeRecipe.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","setActiveRecipe","recipe","type","payload","connect","d_setSearch","search","className","onSubmit","e","preventDefault","placeholder","onChange","value","currentTarget","xmlns","width","height","viewBox","cx","cy","r","x1","y1","x2","y2","addToLocalStorage","key","hoursToExpiry","expiry","Date","setHours","getHours","getTime","localStorage","setItem","JSON","stringify","getFromLocalStorage","itemRetrieved","parse","getItem","date","removeItem","getRecipeResults","searchQuery","a","fetch","response","json","body","console","log","length","getRecipeInformation","recipeId","hasOwnProperty","d_setActiveRecipe","title","image","id","getData","result","onClick","localStorageRecipeInfo","src","alt","recipes","showStatic","map","index","activeRecipe","extendedIngredients","handleClick","ingredientBaseUrl","name","iImage","us","measures","amount","unitShort","generateStaticData","GingerBreadImage0","GingerBreadImage1","GingerBreadImage2","GingerBreadImage3","GingerBreadImage4","GingerBreadImage5","d_populateRecipes","d_addToRecipes","d_clearRecipes","useState","noResultsFound","setNoResultsFound","results","displayStaticData","useEffect","onSearch","localStorageStatic","staticData","localStorageRecipes","searchReducer","state","action","initialState","recipesReducer","activeRecipeReducer","combinedReducers","combineReducers","createStore","rootReducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.571ad5be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gingerbread-cookies-0.8d97a91f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gingerbread-cookies-1.cf1c52ba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gingerbread-cookies-2.05688863.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gingerbread-cookies-3.4a15f623.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gingerbread-cookies-4.328bcb12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gingerbread-cookies-5.98e7c12f.jpg\";","import {\n  POPULATE_RECIPE_RESULTS,\n  CLEAR_RECIPE_RESULTS,\n  ADD_RECIPE_RESULT,\n  SET_SEARCH,\n  SET_ACTIVE_RECIPE,\n} from \"./actionTypes\";\n\nexport const populateRecipes = (recipes) => ({\n  type: POPULATE_RECIPE_RESULTS,\n  payload: {\n    recipes,\n  },\n});\n\nexport const addToRecipes = (recipes) => ({\n  type: ADD_RECIPE_RESULT,\n  payload: {\n    recipes,\n  },\n});\n\nexport const clearRecipes = () => ({\n  type: CLEAR_RECIPE_RESULTS,\n});\n\nexport const setSearch = (search) => ({\n  type: SET_SEARCH,\n  payload: {\n    search,\n  },\n});\n\nexport const setActiveRecipe = (recipe) => ({\n  type: SET_ACTIVE_RECIPE,\n  payload: {\n    recipe,\n  },\n});\n","export const POPULATE_RECIPE_RESULTS = \"POPULATE_RECIPE_RESULTS\";\n\nexport const ADD_RECIPE_RESULT = \"ADD_RECIPE_RESULT\";\n\nexport const CLEAR_RECIPE_RESULTS = \"CLEAR_RECIPE_RESULTS\";\n\nexport const SET_SEARCH = \"SET_SEARCH\";\n\nexport const SET_ACTIVE_RECIPE = \"SET_ACTIVE_RECIPE\";\n","import React from \"react\";\nimport \"../styles/SearchBox.css\";\nimport { setSearch } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst SearchBox = ({ d_setSearch }) => {\n  const handleChange = ({ currentTarget: { value } }) => {\n    d_setSearch(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"search-cont\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder=\"Search for Recipes\"\n        onChange={handleChange}\n      />\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        className=\"search-svg search-btn\"\n      >\n        <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n        <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n      </svg>\n    </form>\n  );\n};\n\nexport default connect(null, {\n  d_setSearch: setSearch,\n})(SearchBox);\n","export const addToLocalStorage = (key, value, hoursToExpiry = 1) => {\n  let expiry = new Date();\n\n  if (typeof hoursToExpiry === \"number\") {\n    expiry.setHours(expiry.getHours() + hoursToExpiry);\n    expiry = expiry.getTime();\n  } else {\n    expiry = null;\n  }\n\n  /* Add the item to localStorage with an expiry time */\n  localStorage.setItem(key, JSON.stringify({ value, expiry }));\n};\n\nexport const getFromLocalStorage = (key) => {\n  const itemRetrieved = JSON.parse(localStorage.getItem(key));\n\n  /* If the item was found in localStorage and it has not expired yet, return the value */\n  if (itemRetrieved) {\n    const date = new Date();\n    if (\n      itemRetrieved.expiry === null ||\n      date.getTime() <= itemRetrieved.expiry\n    ) {\n      return itemRetrieved.value;\n    } else {\n      localStorage.removeItem(key);\n    }\n  }\n\n  return null;\n};\n","export const getRecipeResults = async (searchQuery) => {\n  /* Try to get the results for this search query from the backend */\n  try {\n    const response = await fetch(`/api/recipes/${searchQuery}`);\n    const body = await response.json();\n    console.log(\"Fetched query results and got:\", body);\n\n    if (body.length > 0) {\n      return body;\n    }\n  } catch (e) {\n    console.log(\"Unable to fetch recipes\", e);\n  }\n  return null;\n};\n\nexport const getRecipeInformation = async (recipeId) => {\n  /* Try to get the results for this recipe id from the backend */\n  try {\n    const response = await fetch(`/api/recipe-information/${recipeId}`);\n    const body = await response.json();\n    console.log(\"Fetched recipe info results and got: \", body);\n\n    if (body.hasOwnProperty(\"title\")) {\n      return body;\n    }\n  } catch (e) {\n    console.log(\"Unable to fetch recipes\", e);\n  }\n  return null;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/RecipeCard.css\";\nimport { setActiveRecipe } from \"../redux/actions\";\nimport { getFromLocalStorage, addToLocalStorage } from \"../helpers\";\nimport { getRecipeInformation } from \"../fetchers\";\n\nconst RecipeCard = ({ title, image, id, d_setActiveRecipe }) => {\n  const getData = async () => {\n    /* Query the API for this recipe's information */\n    const result = await getRecipeInformation(id);\n\n    /* If query result has a an id property, it is not empty, add the results to the activeRecipe */\n    if (result && result.hasOwnProperty(\"id\")) {\n      addToLocalStorage(`recipe_${id}`, result);\n      d_setActiveRecipe(result);\n    } else {\n      d_setActiveRecipe({});\n    }\n  };\n\n  const handleClick = () => {\n    const localStorageRecipeInfo = getFromLocalStorage(`recipe_${id}`);\n\n    /* Search for this recipe in localStorage, if it isn't there, fetch the results */\n    if (localStorageRecipeInfo) {\n      console.log(\"Found recipe info in local storage\");\n      d_setActiveRecipe(localStorageRecipeInfo);\n    } else {\n      getData(id);\n    }\n  };\n\n  return (\n    <div className=\"recipe-card\" onClick={handleClick}>\n      <img className=\"recipe-image\" src={image} alt={title} />\n      <h5 className=\"recipe-title\">{title}</h5>\n    </div>\n  );\n};\n\nexport default connect(null, { d_setActiveRecipe: setActiveRecipe })(\n  RecipeCard\n);\n","import React from \"react\";\nimport \"../styles/Home.css\";\nimport RecipeCard from \"./RecipeCard\";\nimport { connect } from \"react-redux\";\n\nconst SearchResults = ({ recipes, showStatic }) => {\n  return (\n    <div className=\"results\">\n      {showStatic && recipes.length > 0 && (\n        <p className=\"no-results\">\n          No results were found, but here are some Gingerbread Cookies &hearts;\n        </p>\n      )}\n      {recipes.map(({ image, title, id }, index) => (\n        <RecipeCard title={title} image={image} key={index} id={id} />\n      ))}\n    </div>\n  );\n};\n\nexport default connect(({ recipes }) => ({ recipes }))(SearchResults);\n","import React from \"react\";\nimport \"../styles/RecipeCard.css\";\nimport { connect } from \"react-redux\";\nimport { setActiveRecipe } from \"../redux/actions\";\nimport \"../styles/RecipeDetails.css\";\n\nconst RecipeDetails = ({\n  activeRecipe: { title, image, extendedIngredients },\n  d_setActiveRecipe,\n}) => {\n  const handleClick = () => {\n    d_setActiveRecipe({});\n  };\n  const ingredientImageSize = [\"100x100\", \"250x250\", \"500x500\"];\n  const ingredientBaseUrl = `https://spoonacular.com/cdn/ingredients_${ingredientImageSize[0]}/`;\n\n  return (\n    <>\n      <div className=\"modal-background\" onClick={handleClick}></div>\n      <div className=\"recipe-details\">\n        <button className=\"exit-btn\" onClick={handleClick}>\n          &times;\n        </button>\n        <h5 className=\"heading\">{title}</h5>\n        <img className=\"recipe-large-image\" src={image} alt={title} />\n        <div className=\"ingredients-container\">\n          {extendedIngredients.map(\n            ({ name, image: iImage, measures: { us } }, index) => (\n              <div className=\"ingredient\" key={index}>\n                {iImage ? (\n                  <img\n                    src={`${ingredientBaseUrl}${iImage}`}\n                    alt={name}\n                    className=\"ingredient-image\"\n                  />\n                ) : null}\n                <p className=\"ingredient-info\">\n                  <span className=\"ingredient-amount\">{us.amount}</span>{\" \"}\n                  <span className=\"ingredient-unit\">{us.unitShort || \"\"}</span>{\" \"}\n                  <span className=\"ingredient-name\">{name}</span>\n                </p>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default connect(({ activeRecipe }) => ({ activeRecipe }), {\n  d_setActiveRecipe: setActiveRecipe,\n})(RecipeDetails);\n","import React, { useEffect, useState } from \"react\";\nimport \"../styles/Home.css\";\nimport SearchBox from \"./SearchBox\";\nimport GingerBreadImage0 from \"../images/gingerbread-cookies-0.jpg\";\nimport GingerBreadImage1 from \"../images/gingerbread-cookies-1.jpg\";\nimport GingerBreadImage2 from \"../images/gingerbread-cookies-2.jpg\";\nimport GingerBreadImage3 from \"../images/gingerbread-cookies-3.jpg\";\nimport GingerBreadImage4 from \"../images/gingerbread-cookies-4.jpg\";\nimport GingerBreadImage5 from \"../images/gingerbread-cookies-5.jpg\";\nimport { connect } from \"react-redux\";\nimport { populateRecipes, addToRecipes, clearRecipes } from \"../redux/actions\";\nimport SearchResults from \"./SearchResults\";\nimport RecipeDetails from \"./RecipeDetails\";\nimport { getFromLocalStorage, addToLocalStorage } from \"../helpers\";\nimport { getRecipeResults } from \"../fetchers\";\n\nconst Home = ({\n  search,\n  recipes,\n  activeRecipe,\n  d_populateRecipes,\n  d_clearRecipes,\n}) => {\n  const [noResultsFound, setNoResultsFound] = useState(false);\n  const getData = async () => {\n    /* Get async recipe results for search from the backend */\n    const results = await getRecipeResults(search);\n    console.log(\"results are\", results);\n\n    /* If there are results, add them to the recipes, otherwise display the static data */\n    if (results) {\n      addToLocalStorage(search, results);\n      d_populateRecipes(results);\n      noResultsFound && setNoResultsFound(false);\n    } else {\n      setNoResultsFound(true);\n      displayStaticData();\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Active Recipe has changed to\", activeRecipe);\n  }, [activeRecipe]);\n\n  useEffect(() => {\n    /* Whenever the search changes, trigger onSearch() to look for search results */\n    onSearch();\n  }, [search]);\n\n  const displayStaticData = () => {\n    const noResults = \"no_results\";\n    const localStorageStatic = getFromLocalStorage(noResults);\n\n    /* If static data is in local storage, populate from there, otherwise generate them */\n    if (localStorageStatic) {\n      d_populateRecipes(localStorageStatic);\n    } else {\n      const staticData = generateStaticData();\n      console.log(\"Generated static data\");\n      d_populateRecipes(staticData);\n      addToLocalStorage(noResults, staticData);\n    }\n  };\n\n  const onSearch = () => {\n    /* If the search is not empy, then look for the results. Otherwise, clear the results */\n    if (search) {\n      const localStorageRecipes = getFromLocalStorage(search);\n\n      /* If there is a result in localStorage, populate the recipes from there, else fetch results from the backend */\n      if (localStorageRecipes) {\n        console.log(\"Found query results in local storage\");\n        d_populateRecipes(localStorageRecipes);\n      } else {\n        getData(search);\n      }\n    } else {\n      d_clearRecipes();\n    }\n  };\n\n  return (\n    <div\n      id=\"home\"\n      className={`section sect-1 ${recipes.length > 0 ? \"show\" : \"\"}`}\n    >\n      <h1 id=\"main-title\" className=\"heading\">\n        Gingerbread\n      </h1>\n      <SearchBox />\n      {recipes.length > 0 && <SearchResults showStatic={noResultsFound} />}\n      {activeRecipe.title && <RecipeDetails />}\n    </div>\n  );\n};\n\nconst generateStaticData = () => {\n  const dataList = [\n    { title: \"Gingerbread Cookies\", image: GingerBreadImage0 },\n    { title: \"Gingerbread Cookies\", image: GingerBreadImage1 },\n    { title: \"Gingerbread Cookies\", image: GingerBreadImage2 },\n    { title: \"Gingerbread Cookies\", image: GingerBreadImage3 },\n    { title: \"Gingerbread Cookies\", image: GingerBreadImage4 },\n    { title: \"Gingerbread Cookies\", image: GingerBreadImage5 },\n  ];\n  return dataList;\n};\n\nexport default connect(\n  ({ search, recipes, activeRecipe }) => ({ search, recipes, activeRecipe }),\n  {\n    d_populateRecipes: populateRecipes,\n    d_addToRecipes: addToRecipes,\n    d_clearRecipes: clearRecipes,\n  }\n)(Home);\n","import { SET_SEARCH } from \"../actionTypes\";\n\nconst searchReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case SET_SEARCH:\n      return action.payload.search;\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import {\n  POPULATE_RECIPE_RESULTS,\n  CLEAR_RECIPE_RESULTS,\n  ADD_RECIPE_RESULT,\n} from \"../actionTypes\";\n\nconst initialState = [];\n\nconst recipesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POPULATE_RECIPE_RESULTS:\n      return action.payload.recipes;\n\n    case ADD_RECIPE_RESULT:\n      return [...state, action.payload.recipes];\n\n    case CLEAR_RECIPE_RESULTS:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default recipesReducer;\n","import { SET_ACTIVE_RECIPE } from \"../actionTypes\";\n\nconst initialState = {};\n\nconst activeRecipeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_RECIPE:\n      return action.payload.recipe;\n    default:\n      return state;\n  }\n};\n\nexport default activeRecipeReducer;\n","import { combineReducers } from \"redux\";\nimport search from \"../reducers/search\";\nimport recipes from \"../reducers/recipes\";\nimport activeRecipe from \"../reducers/activeRecipe\";\n\nconst combinedReducers = combineReducers({ search, recipes, activeRecipe });\nexport default combinedReducers;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./components/Home\";\nimport \"./styles/index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Home />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}